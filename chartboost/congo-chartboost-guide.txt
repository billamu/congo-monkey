
Chartboost integration follows the general guidelines as described on the
chartboost.com site. Currently, the callback/delegate methods are not implemented;
ie the wrapper provides basic functionality -- you may find more complete wrappers
elsewhere. Android integration requires some extra setup, see step 5 below.


1. Register an account at chartboost.com, download the required SDKs. Note any
device or target SDK/OS requirements that may be relevant to your project.

2. Add a new app via the Chartboost dashboard and note the appid and app signature.
iOS and Android versions of an app will each have unique IDs. 
Add these IDs to chartboostwrapper.ios.cpp and/or chartboostwrapper.android.java
[unfortunately these are 'hard-coded' here at the moment].

3. Until you're ready to deploy to a store, enable test mode on the dashboard.
(Note, test mode disables itself after ~20 ad requests, which can be a bit confusing!).

4. It can be useful to create a default network publishing campaign via the dashboard, 
and associate it with your newly created app(s). This is a requirement for seeing
actual ads on a device (not just the test ad).

5. *Android only*: add the required code to the androidgame.java template file --
see details in androidgame-CHANGES.java file. Either make the changes directly to  
<MonkeyDir>/targets/android/modules/native/androidgame.java or (to be safe) make a 
separate target by copying the entire <MonkeyDir>targets/android folder, giving it 
a new #TARGET_NAME in TARGET.monkey (restart TED to see the new target listed).

It is also worth checking the app permissions in the AndroidManifest.xml (in 
templates/template) to ensure the recommended settings are used, e.g. require
android.permission.INTERNET (see https://help.chartboost.com/documentation/android,
optionally add ACCESS_NETWORK_STATE etc). Note, you must delete your android build
folder to get updated versions to copy from the target template folder!
See the provided AndroidManifest-EXAMPLE.xml for reference.

Also, not the following section added to the manifest:
	<activity android:name="com.chartboost.sdk.CBImpressionActivity"
    			android:excludeFromRecents="true"
    			android:theme="@android:style/Theme.Translucent.NoTitleBar"/>

It is also sensible to check the min/target API values -- current Chartboost requires
API level 8, the Monkey defaults tend to set much lower values.

6a. For iOS, copy the Chartboost folder you downloaded earlier (containing Chartboost.h
and libChartboost.a) into your game's Xcode project. The project won't get wiped over
when rebuilding in Monkey.

6b. For Android, copy the Chartboost libs files you downloaded earlier (chartboost.jar
and chartboost.jar.properties) into your game's android/libs build folder.

7. Finally, decide where to call the Chartboost functions in your code.

  It is recommended to call ChartboostWrapper.StartSession() early on, e.g. in your
CongoApp OnCreate() method. The Chartboost docs recommend calling StartSession whenever
the app resumes; you can do this inside OnResume().

  Where to place interstitial ads is up to you, usually they are best at startup, 
game over, or pause screens. Note the optional location strings, these can be used to
disable or limit ads at certain points of your game (see
https://help.chartboost.com/documentation/ios/namedlocations).

  Use of the 'Show More Games' feature requires a campaign (or your own apps) to be
set up in the 'more apps' section of the game's page on the dashboard. See
https://help.chartboost.com/documentation/moreapps. 


[BRS] Feb 2014.
